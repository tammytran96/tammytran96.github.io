{"ast":null,"code":"import React from'react';import'../styles.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Experience=()=>{return/*#__PURE__*/_jsx(\"div\",{id:\"experience\",className:\"section\",children:/*#__PURE__*/_jsx(\"div\",{className:\"experience-container\",children:/*#__PURE__*/_jsx(\"main\",{className:\"experience-main\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"experience-content-wrapper\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"experience-text-title\",children:\"\\\"Experience\\\"\"}),/*#__PURE__*/_jsx(\"p\",{className:\"experience-text-description\",children:\"Experience content here\"})]})})})});};export default Experience;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","Experience","id","className","children"],"sources":["/Users/tamtran/Desktop/tammytran96.github.io/src/pages/Experience.js"],"sourcesContent":["import React from 'react';\nimport '../styles.css'\n\nconst Experience = () => {\n  return (\n    <div id=\"experience\" className=\"section\">\n      <div className=\"experience-container\">\n        <main className=\"experience-main\">\n          <div className=\"experience-content-wrapper\">\n            <h1 className=\"experience-text-title\">\n              \"Experience\"\n            </h1>\n            <p className=\"experience-text-description\">\n            Experience content here\n            </p>\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default Experience;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,eAAe,QAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEtB,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACvB,mBACEH,IAAA,QAAKI,EAAE,CAAC,YAAY,CAACC,SAAS,CAAC,SAAS,CAAAC,QAAA,cACtCN,IAAA,QAAKK,SAAS,CAAC,sBAAsB,CAAAC,QAAA,cACnCN,IAAA,SAAMK,SAAS,CAAC,iBAAiB,CAAAC,QAAA,cAC/BJ,KAAA,QAAKG,SAAS,CAAC,4BAA4B,CAAAC,QAAA,eACzCN,IAAA,OAAIK,SAAS,CAAC,uBAAuB,CAAAC,QAAA,CAAC,gBAEtC,CAAI,CAAC,cACLN,IAAA,MAAGK,SAAS,CAAC,6BAA6B,CAAAC,QAAA,CAAC,yBAE3C,CAAG,CAAC,EACD,CAAC,CACF,CAAC,CACJ,CAAC,CACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAH,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}